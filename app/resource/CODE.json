{
    "image": "http://bookthumb.phinf.naver.net/cover/073/902/07390287.jpg?type=m1&udate=20150715",
    "author": "로버트 C. 마틴",
    "publisher": "인사이트",
    "quotes": [
        {
            "page": "197",
            "text": "SOS 는 쓰기 쉬운 모스 부호의 조합. (점3선3점3)\n 2:4 디코더 : 두개의 입력스위치로 네가지 값을 표현함.(3:8, 4:16) "
        },
        {
            "page": "217",
            "text": "반가산기는 xor와 and게이트로 이루어 진다. 반가산기는 자리올림이 처리되지 않는다 "
        },
        {
            "page": "219",
            "text": "전가산기는 반가산기 두개와 or로 이루어진다. "
        },
        {
            "page": "229",
            "text": "보수를 쓸때의 장점은 뺄셈을 할때 빌림수가 발생하지 않는다는 점이다. (보수 자체가 가장 근 값이므로) "
        },
        {
            "page": "230",
            "text": "보수로 뺄셈후 마지막에 1을 더하는 이유는 자리올림이 된 맨 앞자리를 버렸기 때문. (1000-999)"
        },
        {
            "page": "250",
            "text": "오실레이터 : 진동자.  스스로 스위치를 열고 닫는 상태를 유지함. 버저의 원리. 클럭의 근간 "
        },
        {
            "page": "254",
            "text": "피드백 : 자기의 출력이 다시 자기의 입력이 되는 회로 "
        },
        {
            "page": "256",
            "text": "플립플롭 : 두 스위치가 열려있을때 두가지의 안정된 상태를 갖는 회로. 정보를 유지할 수 있다 "
        },
        {
            "page": "270",
            "text": "레벨트리거는 클럭과 데이터 모두 입력을 주고 있어야, 즉 클럭이 들어온동안 데이터는 바꾸지 않아야 유지되지만 엣지트리거는 클럭을 넣은 순간의 데이터값을 영구 보존. 이후 데이터를 바꿔도 영향이 없음 "
        },
        {
            "page": "274",
            "text": "관성 딜레이 : 게이트가 상태값이 변하는데 걸리는 시간. 따라서 모든 게이트는 입력이 변경되어서 정상적인 출력이 나갈때까지 값을 유지시켜줘야 한다.  "
        },
        {
            "page": "315",
            "text": "1KB가 1000이 아니라 1024를 표현한다는 걸 명확하게 하기위해 1KiB라는 표현도 표준으로 등록되어 있다. 마찬가지로 1MiB. "
        },
        {
            "page": "321",
            "text": "램이 휘발성인 이유는 릴레이와 같은 트렌지스터로 구성되어 있으므로 전원이 나가면 천이되지 않은 상태가 되기 때문이다. "
        },
        {
            "page": "348",
            "text": "TANSTAAFL 탄스탄플 : There ain't No Such Thing As A Free Lunch "
        },
        {
            "page": "361",
            "text": "계산기와 컴퓨터를 구분하는 가장 중요한 요소는 조건에 따른 제어가 가능한 반복 혹은 루프 기능을 포함하느냐 이다.(이 말은 분기를 포함한다) "
        },
        {
            "page": "374",
            "text": "18세기에서 1940년대까지 컴퓨터란 용어는 숫자를 계산하기 위하여 고용된 사람인 계산사를 의미했다. "
        },
        {
            "page": "375",
            "text": "어거스타 에이다 바이런. 최초의 프로그래머. 배비지의 해석기관 이용. "
        },
        {
            "page": "381",
            "text": "진공관 전에 릴레이가 사용됐다. 하버드 마크-1. "
        },
        {
            "page": "381",
            "text": "릴레이에 나방이 낀 것이 버그의 시초. "
        },
        {
            "page": "385",
            "text": "프로그램 내장 방식 : 명령어와 데이터가 모두 메모리에 있음. EDVAC. 애니악은 스위치를 일일이 조작하면서 코드를 작동시킴. "
        },
        {
            "page": "395",
            "text": "트렌지스터를 모아서 게이트를 하나의 칩으로 만든게 집적회로 IC 이다. "
        },
        {
            "page": "409",
            "text": "클럭은 오실레이터의 속도와 일치. "
        },
        {
            "page": "455",
            "text": "RISK방식이 빠른 이유. 명령어가 간단하여 여러번의 명령어 패치 과정이 필요 없다. 대신 더 많은 레지스터를 사용하므로 복잡하다. "
        },
        {
            "page": "486",
            "text": "버스 사양을 공개함으로서 써드 파티제조사의 참여를 이끌고 시장이 커져서 산업계의 표준이 된다. "
        },
        {
            "page": "488",
            "text": "DMA(direct memory access) 주변장치가 cpu도움 없이 직접 메모리에 접근. "
        },
        {
            "page": "505",
            "text": "가로 문자열의 길이가 80인 시초. IBM천공카드 한장이 80자를 표현했음. "
        },
        {
            "page": "509",
            "text": "키보드의 작동방식. 오실레이터를 통해 카운터를 돌려서 0번부터 쭉 키 스위치가 눌렸는지 확인. 눌린키는 그 키에 해당하는 1비트 RAM값이 1로 변경. 그리고 인터럽트를 보내서 CPU가 읽어갈 수 있게 함. "
        },
        {
            "page": "522",
            "text": "초기화코드. 부팅시 채워져있는 쓰레기값들을 지우고 작동하는데 필요한 초기값을 세팅하는 코드. 가령스택을 정상범위에 위치시키고 화면 메모리를 리셋 시킴. "
        },
        {
            "page": "533",
            "text": "콘솔이라 함은 키보드와 화면을 통칭하는 말. "
        },
        {
            "page": "538",
            "text": "CP/M : 8080에 사용된 운영체제로 도스의 근간이 됨. "
        },
        {
            "page": "592",
            "text": "lisp은 폰노이만 아키텍쳐를 따르지 않는다. "
        },
        {
            "page": "600",
            "text": "인터페이스의 혁명은 70년대에 소형 컴퓨터들이 비디오 메모리를 마이크로프로세서의 주소영역에 위치시키면서 부터 일어남. "
        },
        {
            "page": "608",
            "text": "최초의 윈도우 기반 GUI는 PARC의 Alto시스템. "
        },
        {
            "page": "613",
            "text": "PARC 에서 최초의 oop지원 언어인 스몰토크를 개발. "
        },
        {
            "page": "613",
            "text": "gui기반이서는 객체지향이 표현하기 훨씬 유리함. "
        },
        {
            "page": "626",
            "text": "상대적으로 비교하자면 파형 파일을 비트맵에, MIDI파일은 벡터 그래픽의 메타 파일로 비유할 수 있겠습니다. "
        }
    ],
    "title": "CODE",
    "pubdate": "2013-12-24",
    "link": "http://openapi.naver.com/l?AAACssTS2qtHX2d3FVyyhKTbPNKCkpUDV2VDVyA6Kk/PxsvbzEstQiveT8XKhAShKUEZ+SWpKYmaNXkAHU4ZaUmaJq7GJubGlgZGGuVmJraGJmbmpoaWFibmlsopZrm+zkHBrk55WemOGVWVniW+laEhScm2fhFZphANQHAGtpEamHAAAA"
}