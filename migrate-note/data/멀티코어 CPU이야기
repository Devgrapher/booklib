9장
하이퍼스레딩은 문맥교환 비용을 줄이는데 목적이 있다. - 0
13장
분기문이 많을 수록 코드의 최적화가 어려우므로 코드는 느려진다. - 0
15장
리오더 버퍼에서 명령어 완료시까지 데이터가 실제 메모리에 반영되지 않을 수 있는 이유는 로드스토어큐 때문이었다. 해당 큐가 변경사항들을 모두 큐잉하고 있으므로. 
memcmp의 src와 dst 두 인자는 메모리가 겹치면 안된다. 이사실을 restrict키워드로 선언하고 있다. 겹쳐야 할 경우는 memmove를 쓴다. - 0
16장
성능개선을 위해 소프트웨어 프리패칭을 고려해 보자. 간단 그리디 프리패칭 같은 알고리즘. - 0
17장
xor를 이용한 스왑기법은 오히려 더 느려지게 할 수도 있다. - 0
19장
결정론은 동일란 인풋이 있으면 항상 같은 아웃풋이 나오지만 비결정론은 그렇지 않다. 그래서 수학으로 표현되지 않는다. - 0
20장
가짜 공유문제. 서로 다른 변수가 같은 캐시라인에 있으면 시피유가 캐시라인의 변경여부를 확인하느라 실제 공유된변수를 쓰는 것처럼 성능이 저하될 수 있다. 구조체의 패딩을 이용해 피할 수 있음, 혹은 aligned(CACHED_LINE) - 0

대표적으로 스레딩 빌딩 블록(TBB) 라이브러리의 tbbmalloc과 HOARD라는 메모리 할당자가 있다. - 0
